<!-- XML, HTML, JS, JSON 지원, XMLView 추천 -->

<mvc:View controllerName="project1.controller.App"
    xmlns:html="http://www.w3.org/1999/xhtml"
    xmlns:mvc="sap.ui.core.mvc" displayBlock="true"
    xmlns:tnt="sap.tnt"
    xmlns="sap.m"
    height = "100%">
    <!-- sap sdk : toolpage layout -->
    <tnt:ToolPage id="toolPage">
		<tnt:header>
			<tnt:ToolHeader id="_IDGenToolHeader1">
				<!-- <Image id="_IDGenImage1" height="1.5rem"
					   class="sapUiSmallMarginBegin"
					   src="https://www.sap.com/dam/application/shared/logos/sap-logo-svg.svg" /> -->
                <Image id="IdGenImage2" height = "1.5rem"
                     class="sapUiSmallMarginBegin"
                     src="view/img/logo.svg"
                     press="toHome"/>
                <MenuButton id="menu" text="메뉴" buttonMode="Split" width="auto">

                    <menu>
                        <Menu id="_IDGenMenu1">
							<MenuItem press="toCustomer" id="_IDGenMenuItem3" text="고객 마스터"/>
                            <MenuItem press="toGLAccount" id="_IDGenMenuItem1" text="총계정원장 마스터"/>
							<MenuItem press="toCompanyCode" id="_IDGenMenuItem4" text="회사코드 마스터"/>
                        </Menu>
                    </menu>
                </MenuButton>
            </tnt:ToolHeader>
		</tnt:header>

		<tnt:mainContents>
        <!-- 실제로 들어올 content 불러오는 페이지 -->
            <App id="app">
            <!-- id="app"은 manifest의 routing의 controlId값으로 연동 -->
            </App>

		</tnt:mainContents>
	</tnt:ToolPage>
    <!-- app이라는 공간 할당해서 load될 파일을 manifest의 routing에서 할당 -->
</mvc:View>
